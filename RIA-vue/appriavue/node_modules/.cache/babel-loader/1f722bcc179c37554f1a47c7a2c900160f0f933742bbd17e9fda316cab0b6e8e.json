{"ast":null,"code":"import Etudiant from './EtudiantPage.vue';\nexport default {\n  name: 'Hello_world',\n  components: {\n    Etudiant,\n    Prof,\n    Admin\n  },\n  data() {\n    return {\n      students: [],\n      username: '',\n      password: '',\n      loggedIn: false,\n      loggedprof: false,\n      loggedadmin: false\n    };\n  },\n  methods: {\n    async test(username, password) {\n      const response = await fetch('http://localhost/RIA/Welcome/lutil');\n      const data = await response.json();\n      this.students = data;\n      this.students = JSON.parse(this.students.toto);\n      for (let i = 0; i < this.students.length; i++) {\n        if (this.students[i].prenom == username && this.students[i].password == password) {\n          return this.students[i].role;\n        }\n      }\n      return false;\n    },\n    async validateCredentials() {\n      this.toto = await this.test(this.username, this.password);\n      switch (this.toto) {\n        case \"etudiant\":\n          this.loggedIn = true;\n          break;\n        case \"prof\":\n          this.loggedprof = true;\n          break;\n        case \"admin\":\n          this.loggedadmin = true;\n          break;\n        default:\n          alert('Une erreur s\\'est produite');\n          break;\n      }\n    }\n  }\n};","map":{"version":3,"names":["Etudiant","name","components","Prof","Admin","data","students","username","password","loggedIn","loggedprof","loggedadmin","methods","test","response","fetch","json","JSON","parse","toto","i","length","prenom","role","validateCredentials","alert"],"sources":["src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Liste d'Ã©tudiants</h1>\n    <ul>\n      <li v-for=\"student in students\" :key=\"student.id_utilisateur\">{{ student.nom}}{{ student.password}} </li>\n    </ul>\n    <form>\n      <label for=\"username\">Nom d'utilisateur:</label>\n      <input type=\"text\" id=\"username\" v-model=\"username\">\n      <label for=\"password\">Mot de passe:</label>\n      <input type=\"password\" id=\"password\" v-model=\"password\">\n      <button type=\"button\" @click=\"validateCredentials()\">Valider</button>\n    </form>\n  <Etudiant v-if=\"loggedIn\" />\n  </div>\n</template>\n\n\n<script>\nimport Etudiant from './EtudiantPage.vue';\nexport default {\n  name: 'Hello_world',\n   components: { Etudiant ,Prof, Admin },\n  data() {\n    return {\n      students: [],\n      username: '',\n      password: '',\n      loggedIn: false,\n      loggedprof: false,\n      loggedadmin: false,\n    }\n  },\n  methods: {\n    async test(username,password) {\n      const response = await fetch('http://localhost/RIA/Welcome/lutil');\n      const data = await response.json();\n      this.students = data;\n      this.students =JSON.parse(this.students.toto);\n      for (let i = 0; i < this.students.length; i++) {\n           if(this.students[i].prenom==username && this.students[i].password==password)\n        {\n          return this.students[i].role}\n}\n      return false\n    },\n    async validateCredentials() {\n      this.toto= await this.test(this.username,this.password);\n     \n      switch(this.toto) {\n        case \"etudiant\":\n          this.loggedIn = true;\n          break;\n        case \"prof\":\n        this.loggedprof = true; break;\n        case \"admin\":\n        this.loggedadmin = true; break;\n        default:\n          alert('Une erreur s\\'est produite');\n          break;\n      }\n    }\n  },\n\n}\n</script>\n"],"mappings":"AAmBA,OAAAA,QAAA;AACA;EACAC,IAAA;EACAC,UAAA;IAAAF,QAAA;IAAAG,IAAA;IAAAC;EAAA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,QAAA;MACAC,QAAA;MACAC,QAAA;MACAC,UAAA;MACAC,WAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,KAAAN,QAAA,EAAAC,QAAA;MACA,MAAAM,QAAA,SAAAC,KAAA;MACA,MAAAV,IAAA,SAAAS,QAAA,CAAAE,IAAA;MACA,KAAAV,QAAA,GAAAD,IAAA;MACA,KAAAC,QAAA,GAAAW,IAAA,CAAAC,KAAA,MAAAZ,QAAA,CAAAa,IAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,QAAAd,QAAA,CAAAe,MAAA,EAAAD,CAAA;QACA,SAAAd,QAAA,CAAAc,CAAA,EAAAE,MAAA,IAAAf,QAAA,SAAAD,QAAA,CAAAc,CAAA,EAAAZ,QAAA,IAAAA,QAAA,EACA;UACA,YAAAF,QAAA,CAAAc,CAAA,EAAAG,IAAA;QAAA;MACA;MACA;IACA;IACA,MAAAC,oBAAA;MACA,KAAAL,IAAA,cAAAN,IAAA,MAAAN,QAAA,OAAAC,QAAA;MAEA,aAAAW,IAAA;QACA;UACA,KAAAV,QAAA;UACA;QACA;UACA,KAAAC,UAAA;UAAA;QACA;UACA,KAAAC,WAAA;UAAA;QACA;UACAc,KAAA;UACA;MACA;IACA;EACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}