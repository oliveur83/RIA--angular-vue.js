{"ast":null,"code":"import note_prof from './formulaire/note_prof.vue';\nexport default {\n  name: 'ProfPage',\n  components: {\n    note_prof\n  },\n  props: {\n    id_utilisateur: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      prof_edt: [],\n      prof_note: [],\n      prof_liste_etud: [],\n      for_note_b: false\n    };\n  },\n  methods: {\n    async edt() {\n      const response = await fetch(`http://localhost/RIA/Welcome/ledt?id_prof=${this.id_utilisateur}`);\n      const data = await response.json();\n      this.prof_edt = data;\n      this.prof_edt = JSON.parse(this.prof_edt.toto);\n    },\n    for_note() {\n      this.for_note_b = true;\n    },\n    async submitNote() {\n      console.log(\"toto\", this.$refs.note_prof.note, this.$refs.note_prof.id_cours, this.$refs.note_prof.id_utilisateur);\n      const response = await fetch(`http://localhost/RIA//Ajouter/ajout_note_insert?id_cours=${this.$refs.note_prof.id_cours}&id_utilisateur=${this.$refs.note_prof.id_utilisateur}&note=${this.$refs.note_prof.note}`);\n      const data = await response.json();\n      this.prof_note = data;\n      console.log(\"tata\", this.prof_note);\n    },\n    async liste() {\n      const response = await fetch(`http://localhost/RIA/Welcome/liste_etudiant_prof?id=${this.id_utilisateur}`);\n      const data = await response.json();\n      this.prof_liste_etud = data;\n      this.prof_liste_etud = JSON.parse(this.prof_liste_etud.toto);\n    }\n  }\n};","map":{"version":3,"names":["note_prof","name","components","props","id_utilisateur","type","String","required","data","prof_edt","prof_note","prof_liste_etud","for_note_b","methods","edt","response","fetch","json","JSON","parse","toto","for_note","submitNote","console","log","$refs","note","id_cours","liste"],"sources":["src/components/ProfPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Page prof</h1>\r\n    <p>Votre ID utilisateur est {{ id_utilisateur }}.</p>\r\n    \r\n    <button @click.prevent=\"edt\">afficher votre emploi du temp</button>\r\n    <button @click.prevent=\"for_note\">metre une note a vos etudiant </button>\r\n    <button @click.prevent=\"liste\">liste d eovs etudiant </button>\r\n    <ul>\r\n      <li v-for=\"student in prof_edt\" :key=\"student.id_utilisateur\">{{ student.id_cours}} {{ student.date_debut }} {{ student.date_fin}} </li>\r\n    </ul>\r\n   <div v-if=\"for_note_b\">\r\n    \r\n      <note_prof ref=\"note_prof\" />\r\n      <button @click=\"submitNote()\">Envoyer</button>\r\n    </div>\r\n      <ul>\r\n      <li v-for=\"student in prof_liste_etud\" :key=\"student.id_utilisateur\">{{ student.id_cours}} {{ student.date_debut }} {{ student.date_fin}} </li>\r\n    </ul>\r\n\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport note_prof from './formulaire/note_prof.vue';\r\n  \r\nexport default {\r\n  name: 'ProfPage', \r\n  components: { note_prof}, \r\n  props: {\r\n    id_utilisateur: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  },data() {\r\n    return {\r\n      prof_edt: [],\r\n      prof_note: [],\r\n      prof_liste_etud: [],\r\n      for_note_b: false\r\n    }\r\n  },\r\n  methods: {\r\n   async  edt() {\r\n      const response = await fetch(`http://localhost/RIA/Welcome/ledt?id_prof=${this.id_utilisateur}`);\r\n    const data = await response.json();\r\n      this.prof_edt = data;\r\n      this.prof_edt =JSON.parse(this.prof_edt.toto);\r\n    },\r\n    for_note(){\r\n      this.for_note_b=true\r\n    },\r\n   async  submitNote() {\r\n    console.log(\"toto\",this.$refs.note_prof.note,this.$refs.note_prof.id_cours,this.$refs.note_prof.id_utilisateur)\r\n      const response = await fetch(`http://localhost/RIA//Ajouter/ajout_note_insert?id_cours=${this.$refs.note_prof.id_cours}&id_utilisateur=${this.$refs.note_prof.id_utilisateur}&note=${this.$refs.note_prof.note}`);\r\n    const data = await response.json();\r\n      this.prof_note = data;\r\n      console.log(\"tata\",this.prof_note)\r\n\r\n    },\r\n    async liste() {\r\n      const response = await fetch(`http://localhost/RIA/Welcome/liste_etudiant_prof?id=${this.id_utilisateur}`);\r\n    const data = await response.json();\r\n      this.prof_liste_etud = data;\r\n      this.prof_liste_etud =JSON.parse(this.prof_liste_etud.toto);\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"AAwBA,OAAAA,SAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAF;EAAA;EACAG,KAAA;IACAC,cAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;EACA;EAAAC,KAAA;IACA;MACAC,QAAA;MACAC,SAAA;MACAC,eAAA;MACAC,UAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,IAAA;MACA,MAAAC,QAAA,SAAAC,KAAA,mDAAAZ,cAAA;MACA,MAAAI,IAAA,SAAAO,QAAA,CAAAE,IAAA;MACA,KAAAR,QAAA,GAAAD,IAAA;MACA,KAAAC,QAAA,GAAAS,IAAA,CAAAC,KAAA,MAAAV,QAAA,CAAAW,IAAA;IACA;IACAC,SAAA;MACA,KAAAT,UAAA;IACA;IACA,MAAAU,WAAA;MACAC,OAAA,CAAAC,GAAA,cAAAC,KAAA,CAAAzB,SAAA,CAAA0B,IAAA,OAAAD,KAAA,CAAAzB,SAAA,CAAA2B,QAAA,OAAAF,KAAA,CAAAzB,SAAA,CAAAI,cAAA;MACA,MAAAW,QAAA,SAAAC,KAAA,kEAAAS,KAAA,CAAAzB,SAAA,CAAA2B,QAAA,wBAAAF,KAAA,CAAAzB,SAAA,CAAAI,cAAA,cAAAqB,KAAA,CAAAzB,SAAA,CAAA0B,IAAA;MACA,MAAAlB,IAAA,SAAAO,QAAA,CAAAE,IAAA;MACA,KAAAP,SAAA,GAAAF,IAAA;MACAe,OAAA,CAAAC,GAAA,cAAAd,SAAA;IAEA;IACA,MAAAkB,MAAA;MACA,MAAAb,QAAA,SAAAC,KAAA,6DAAAZ,cAAA;MACA,MAAAI,IAAA,SAAAO,QAAA,CAAAE,IAAA;MACA,KAAAN,eAAA,GAAAH,IAAA;MACA,KAAAG,eAAA,GAAAO,IAAA,CAAAC,KAAA,MAAAR,eAAA,CAAAS,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}