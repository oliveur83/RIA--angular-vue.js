{"ast":null,"code":"import Etudiant from './EtudiantPage.vue';\nexport default {\n  name: 'Hello_world',\n  components: {\n    Etudiant\n  },\n  data() {\n    return {\n      students: [],\n      username: '',\n      password: '',\n      loggedIn: false,\n      toto: false\n    };\n  },\n  methods: {\n    async test(username, password) {\n      const response = await fetch('http://localhost/RIA/Welcome/lutil');\n      const data = await response.json();\n      this.students = data;\n      this.students = JSON.parse(this.students.toto);\n      for (let i = 0; i < this.students.length; i++) {\n        console.log(`ID: ${this.students[i].nom}, Name: ${this.students[i].password}`);\n        if (this.students[i].nom == username && this.students[i].password == password) {\n          return true;\n        }\n      }\n      return false;\n    },\n    validateCredentials() {\n      this.toto = this.test(this.username, this.password);\n      console.log(\"tata\", toto);\n      if (this.test(this.username, this.password)) {\n        // Rediriger vers la page Etudiant.vue\n        this.loggedIn = true;\n      } else {\n        alert('Nom d\\'utilisateur ou mot de passe incorrect !');\n      }\n    }\n  }\n};","map":{"version":3,"names":["Etudiant","name","components","data","students","username","password","loggedIn","toto","methods","test","response","fetch","json","JSON","parse","i","length","console","log","nom","validateCredentials","alert"],"sources":["src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Liste d'Ã©tudiants</h1>\n    <ul>\n      <li v-for=\"student in students\" :key=\"student.id_utilisateur\">{{ student.nom }} </li>\n    </ul>\n    <form>\n      <label for=\"username\">Nom d'utilisateur:</label>\n      <input type=\"text\" id=\"username\" v-model=\"username\">\n      <label for=\"password\">Mot de passe:</label>\n      <input type=\"password\" id=\"password\" v-model=\"password\">\n      <button type=\"button\" @click=\"validateCredentials()\">Valider</button>\n    </form>\n  <Etudiant v-if=\"loggedIn\" />\n  </div>\n</template>\n\n\n<script>\nimport Etudiant from './EtudiantPage.vue';\nexport default {\n  name: 'Hello_world',\n   components: { Etudiant },\n  data() {\n    return {\n      students: [],\n      username: '',\n      password: '',\n      loggedIn: false,\n      toto: false\n    }\n  },\n  methods: {\n    async test(username,password) {\n      const response = await fetch('http://localhost/RIA/Welcome/lutil');\n      const data = await response.json();\n      this.students = data;\n      this.students =JSON.parse(this.students.toto);\n      for (let i = 0; i < this.students.length; i++) {\n  console.log(`ID: ${this.students[i].nom}, Name: ${this.students[i].password}`);\n        if(this.students[i].nom==username && this.students[i].password==password)\n        {return true}\n}\n      return false\n    },\n    validateCredentials() {\n      this.toto=this.test(this.username,this.password);\n      console.log(\"tata\",toto)\n      if (this.test(this.username,this.password)) {\n        // Rediriger vers la page Etudiant.vue\n        this.loggedIn = true;\n        \n      } else {\n        alert('Nom d\\'utilisateur ou mot de passe incorrect !');\n      }\n    }\n  },\n\n}\n</script>\n"],"mappings":"AAmBA,OAAAA,QAAA;AACA;EACAC,IAAA;EACAC,UAAA;IAAAF;EAAA;EACAG,KAAA;IACA;MACAC,QAAA;MACAC,QAAA;MACAC,QAAA;MACAC,QAAA;MACAC,IAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,KAAAL,QAAA,EAAAC,QAAA;MACA,MAAAK,QAAA,SAAAC,KAAA;MACA,MAAAT,IAAA,SAAAQ,QAAA,CAAAE,IAAA;MACA,KAAAT,QAAA,GAAAD,IAAA;MACA,KAAAC,QAAA,GAAAU,IAAA,CAAAC,KAAA,MAAAX,QAAA,CAAAI,IAAA;MACA,SAAAQ,CAAA,MAAAA,CAAA,QAAAZ,QAAA,CAAAa,MAAA,EAAAD,CAAA;QACAE,OAAA,CAAAC,GAAA,aAAAf,QAAA,CAAAY,CAAA,EAAAI,GAAA,gBAAAhB,QAAA,CAAAY,CAAA,EAAAV,QAAA;QACA,SAAAF,QAAA,CAAAY,CAAA,EAAAI,GAAA,IAAAf,QAAA,SAAAD,QAAA,CAAAY,CAAA,EAAAV,QAAA,IAAAA,QAAA,EACA;UAAA;QAAA;MACA;MACA;IACA;IACAe,oBAAA;MACA,KAAAb,IAAA,QAAAE,IAAA,MAAAL,QAAA,OAAAC,QAAA;MACAY,OAAA,CAAAC,GAAA,SAAAX,IAAA;MACA,SAAAE,IAAA,MAAAL,QAAA,OAAAC,QAAA;QACA;QACA,KAAAC,QAAA;MAEA;QACAe,KAAA;MACA;IACA;EACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}