{"ast":null,"code":"import Etudiant from './EtudiantPage.vue';\nimport Prof from './ProfPage.vue';\nimport Admin from './AdminPage.vue';\nexport default {\n  name: 'LoginPage',\n  components: {\n    Etudiant,\n    Prof,\n    Admin\n  },\n  data() {\n    return {\n      students: [],\n      username: '',\n      password: '',\n      id_utilisateur: '',\n      loggedIn: false,\n      loggedprof: false,\n      loggedadmin: false\n    };\n  },\n  methods: {\n    async fetchStudents() {\n      const response = await fetch('http://localhost/RIA/Welcome/lutil');\n      const data = await response.json();\n      this.students = JSON.parse(data.toto);\n    },\n    validateCredentials() {\n      const student = this.students.find(student => student.prenom === this.username && student.password === this.password);\n      if (student) {\n        this.id_utilisateur = student.id_utilisateur;\n        switch (student.role) {\n          case 'etudiant':\n            this.loggedIn = true;\n            break;\n          case 'prof':\n            this.loggedprof = true;\n            break;\n          case 'admin':\n            this.loggedadmin = true;\n            break;\n          default:\n            alert('Une erreur s\\'est produite');\n            break;\n        }\n      } else {\n        alert('Identifiants invalides');\n      }\n    }\n  },\n  mounted() {\n    this.fetchStudents();\n  }\n};","map":{"version":3,"names":["Etudiant","Prof","Admin","name","components","data","students","username","password","id_utilisateur","loggedIn","loggedprof","loggedadmin","methods","fetchStudents","response","fetch","json","JSON","parse","toto","validateCredentials","student","find","prenom","role","alert","mounted"],"sources":["src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"login-page\">\n    <h1>Page de connexion</h1>\n\n    <form>\n      <div class=\"form-group\">\n        <label for=\"username\">Nom d'utilisateur:</label>\n        <input type=\"text\" id=\"username\" v-model=\"username\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Mot de passe:</label>\n        <input type=\"password\" id=\"password\" v-model=\"password\" class=\"form-control\">\n      </div>\n      <button type=\"button\" @click=\"validateCredentials()\" class=\"btn btn-primary\">Valider</button>\n    </form>\n\n    <Etudiant v-if=\"loggedIn\" :id_utilisateur=\"id_utilisateur\" />\n    <Prof v-if=\"loggedprof\" :id_utilisateur=\"id_utilisateur\" />\n    <Admin v-if=\"loggedadmin\" :id_utilisateur=\"id_utilisateur\" />\n  </div>\n</template>\n\n<script>\nimport Etudiant from './EtudiantPage.vue';\nimport Prof from './ProfPage.vue';\nimport Admin from './AdminPage.vue';\n\nexport default {\n  name: 'LoginPage',\n  components: { Etudiant, Prof, Admin },\n  data() {\n    return {\n      students: [],\n      username: '',\n      password: '',\n      id_utilisateur: '',\n      loggedIn: false,\n      loggedprof: false,\n      loggedadmin: false,\n    }\n  },\n  methods: {\n    async fetchStudents() {\n      const response = await fetch('http://localhost/RIA/Welcome/lutil');\n      const data = await response.json();\n      this.students = JSON.parse(data.toto);\n    },\n    validateCredentials() {\n      const student = this.students.find(student => student.prenom === this.username && student.password === this.password);\n      if (student) {\n        this.id_utilisateur = student.id_utilisateur;\n        switch (student.role) {\n          case 'etudiant':\n            this.loggedIn = true;\n            break;\n          case 'prof':\n            this.loggedprof = true;\n            break;\n          case 'admin':\n            this.loggedadmin = true;\n            break;\n          default:\n            alert('Une erreur s\\'est produite');\n            break;\n        }\n      } else {\n        alert('Identifiants invalides');\n      }\n    }\n  },\n  mounted() {\n    this.fetchStudents();\n  },\n}\n</script>\n\n<style scoped>\n.login-page {\n  max-width: 400px;\n  margin: 0 auto;\n  padding: 40px;\n    /* Autres styles... */\n    background-image: url('./toto.jpg');\n\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.login-page h1 {\n  color: white;\n}.login-page label {\n  color: white;\n}\n.form-group {\n  margin-bottom: 20px;\n}\n\nlabel {\n  font-weight: bold;\n  display: block;\n}\n\ninput[type=\"text\"],\ninput[type=\"password\"] {\n  width: 100%;\n  padding: 10px;\n  font-size: 16px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.btn {\n  display: inline-block;\n  padding: 10px 20px;\n  font-size: 16px;\n  border: none;\n  border-radius: 4px;\n  background-color: #007bff;\n  color: #fff;\n  cursor: pointer;\n}\n\n.btn-primary {\n  background-color: #007bff;\n}\n\n.btn-primary:hover {\n  background-color: #0069d9;\n}\n</style>\n"],"mappings":"AAuBA,OAAAA,QAAA;AACA,OAAAC,IAAA;AACA,OAAAC,KAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAJ,QAAA;IAAAC,IAAA;IAAAC;EAAA;EACAG,KAAA;IACA;MACAC,QAAA;MACAC,QAAA;MACAC,QAAA;MACAC,cAAA;MACAC,QAAA;MACAC,UAAA;MACAC,WAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,cAAA;MACA,MAAAC,QAAA,SAAAC,KAAA;MACA,MAAAX,IAAA,SAAAU,QAAA,CAAAE,IAAA;MACA,KAAAX,QAAA,GAAAY,IAAA,CAAAC,KAAA,CAAAd,IAAA,CAAAe,IAAA;IACA;IACAC,oBAAA;MACA,MAAAC,OAAA,QAAAhB,QAAA,CAAAiB,IAAA,CAAAD,OAAA,IAAAA,OAAA,CAAAE,MAAA,UAAAjB,QAAA,IAAAe,OAAA,CAAAd,QAAA,UAAAA,QAAA;MACA,IAAAc,OAAA;QACA,KAAAb,cAAA,GAAAa,OAAA,CAAAb,cAAA;QACA,QAAAa,OAAA,CAAAG,IAAA;UACA;YACA,KAAAf,QAAA;YACA;UACA;YACA,KAAAC,UAAA;YACA;UACA;YACA,KAAAC,WAAA;YACA;UACA;YACAc,KAAA;YACA;QACA;MACA;QACAA,KAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAb,aAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}